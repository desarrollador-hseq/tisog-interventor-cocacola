// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  USER
}

model User {
  id String @id @default(uuid())

  email String @unique

  name     String?
  numDoc   String?
  password String?

  role Role @default(USER)

  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])

  active Boolean @default(true)

  isMaster Boolean @default(false)

  receiveNotifications Boolean @default(true)

  passwordResetTokens PasswordResetToken[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([companyId])
}

model PasswordResetToken {
  id      String    @id @default(uuid())
  token   String    @unique
  resetAt DateTime?

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())

  @@index([userId])
}

model Company {
  id String @id @default(uuid())

  name String
  nit  String?

  cityId String?
  city   City?   @relation(fields: [cityId], references: [id])

  logoImgUrl String?

  supervisors User[]

  active Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([cityId])
}

model City {
  id String @id @default(uuid())

  realName  String
  formatted String?

  companies Company[]

  active Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
